{"version":3,"sources":["app.js","mainService.js","mapService.js","gear/gearDirective.js","guides/guidesCtrl.js","jumbo/jumboCtrl.js","menu/menuDirective.js","search/searchCtrl.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","views","service","$http","$q","key","resorts","mainService","city","geoplugin_city","geoplugin_region","lat","geoplugin_latitude","long","geoplugin_longitude","searchKeyword","searchText","location","radius","getPhoto","i","method","responseType","then","response","convertImg","_arrayBufferToBase64","data","console","log","buffer","binary","bytes","Uint8Array","len","byteLength","String","fromCharCode","window","btoa","getResorts","geo","deferred","defer","lng","results","length","photos","bind","resolve","promise","pass","geoUrl","components1","components2","geoCode","zipCity","geoData","geometry","map","infowindow","currentL","initMap","Number","google","maps","Map","document","getElementById","center","zoom","InfoWindow","places","PlacesService","callback","arr","createMarker","place","placeLoc","marker","Marker","position","icon","event","addListener","setContent","name","formatted_address","open","directive","restrict","scope","$scope","gears","$","ready","carousel","link","elem","attrs","click","pathname","replace","hostname","target","hash","slice","animate","scrollTop","offset","top","img","desc","$sce","val","parallax","vid","trustAsResourceUrl","sideNav","menuWidth","edge","closeOnClick","draggable","mapService","zipOcity","showMap"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('snowrider', ['ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: \"./views/jumbo/jumbo.html\",\n                controller: 'jumboCtrl'\n            })\n            .state('guide', {\n                url: '/guide',\n\n                // templateUrl: \"./views/guides/guides.html\",\n                // controller: 'guidesCtrl',\n\n                views: {\n                    '': {\n                        templateUrl: \"./views/guides/guides.html\",\n                        controller: 'guidesCtrl',\n                    },\n\n                    \"featured@guide\": {\n                        templateUrl: './views/guides/resort.html'\n                    }\n                }\n\n            })\n            .state('gear', {\n                url: '/gear',\n                templateUrl: './views/gear/gear.html'\n            })\n            .state('search', {\n              url: '/search',\n              templateUrl: './views/search/search.html',\n              controller: 'searchCtrl'\n            })\n    })\n","angular.module('snowrider')\n    .service('mainService', function($http, $q) {\n\n        // google places Map api key\n        const key = '&key=AIzaSyCY0pUHVH0TCKwnYDFZpl2xkqGkexLRjVg';\n\n        var resorts;\n        var mainService = this;\n        // with geoplugin api\n        this.city = geoplugin_city();\n        this.state = geoplugin_region();\n        this.lat = geoplugin_latitude();\n        this.long = geoplugin_longitude();\n\n        // search request\n        let searchKeyword = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=';\n        // -33.8670522,151.1957362&type=restaurant&keyword=&key=YOUR_API_KEY\n\n        let searchText = 'https://maps.googleapis.com/maps/api/place/textsearch/json?query=ski+snowboard+resorts&rankBy=distance'\n        var location = '&location=' + this.lat + ',' + this.long;\n        let radius = '&radius=20000';\n\n        this.getPhoto = function (i) {\n          return $http({\n            method: 'GET',\n            url:\n             'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=CnRtAAAATLZNl354RwP_9UKbQ_5Psy40texXePv4oAlgP4qNEkdIrkyse7rPXYGd9D_Uj1rVsQdWT4oRz4QrYAJNpFX7rzqqMlZw2h2E2y5IKMUZ7ouD_SlcHxYq1yL4KbKUv3qtWgTK0A6QbGh87GB3sscrHRIQiG2RrmU_jF4tENr9wGS_YxoUSSDrYjWmrNfeEHSGSc3FyhNLlBU' + key,\n             responseType: 'arraybuffer'\n            // 'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=' + reference + key\n          })\n          .then(function (response) {\n\n            var convertImg = _arrayBufferToBase64(response.data);\n            console.log(convertImg);\n            return convertImg;\n\n\n          })\n        }\n\n        function _arrayBufferToBase64(buffer) {\n          var binary = '';\n          var bytes = new Uint8Array(buffer);\n          var len = bytes.byteLength;\n          for (var i = 0; i < len; i++) {\n            binary += String.fromCharCode(bytes[i]);\n          }\n          return window.btoa(binary);\n        }\n\n\n        this.getResorts = function(geo) { // when to convert the user iputed city name or zipcode\n          var deferred = $q.defer()\n\n            if (geo) {\n                location = '&location=' + geo.lat + ',' + geo.lng; //had to reset the location parameter correctly\n                console.log(location);\n            }\n             $http({\n\n\n                method: 'GET',\n                url: searchText + location + key,\n                //  'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=-33.8670522,151.1957362&radius=500&type=restaurant&keyword=cruise' + key\n\n\n                // headers: {reference\n\n                //   'Access-Control-Allow-Origin: * ',\n                //   'Access-Control-Allow-Headers: AUTHORIZATION',\n                //   'Access-Control-Allow-Methods: GET'\n                // }\n            }).then(function(response ) {\n                console.log(response);\n                resorts = response.data.results;\n\n\n                  // for (var i = 0; i < resorts.length; i++) {\n                  //   // var ref = response[i].photos[0].photo_reference\n                  //   console.log(resorts)\n                  //\n                  //   $http({\n                  //     method: 'GET',\n                  //     url:\n                  //      'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=CnRtAAAATLZNl354RwP_9UKbQ_5Psy40texXePv4oAlgP4qNEkdIrkyse7rPXYGd9D_Uj1rVsQdWT4oRz4QrYAJNpFX7rzqqMlZw2h2E2y5IKMUZ7ouD_SlcHxYq1yL4KbKUv3qtWgTK0A6QbGh87GB3sscrHRIQiG2RrmU_jF4tENr9wGS_YxoUSSDrYjWmrNfeEHSGSc3FyhNLlBU' + key\n                  //     // 'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=' + reference + key\n                  //   }).then(function (i, response) {\n                  //     resorts[i].photos = response;\n                  //   }.bind(null, i))\n                  //\n                  //\n                  // }\n                  for (var i = 0; i < resorts.length; i++) {\n                    mainService.getPhoto().then(function (i, response) {\n                      resorts[i].photos = response.data;\n                      console.log(resorts);\n                    }.bind(null, i));\n                  }\n\n\n\n\n                deferred.resolve(resorts);\n\n            })\n            // .then(function (response) {\n            //\n            //\n            // })\n\n\n          return deferred.promise\n        }\n\n\n\n        // this.getPhotos();\n\n\n        this.pass = function() {\n            return resorts;\n        }\n\n        const geoUrl = 'https://maps.googleapis.com/maps/api/geocode/json?address=';\n        const components1 = '&components=administrative_area_level_3:';\n        const components2 = '|postal_code:';\n\n        this.geoCode = function(zipCity) {\n            //console.log(zipcodeBaseUrl + zip + zipcodeComponents + zip + '&sensor=true' + zipcodeKey);\n            return $http({\n                method: 'GET',\n                url: geoUrl + zipCity + key\n            }).then(function(results) {\n\n                // if(results.data.status === \"ZERO_RESULTS\") {\n                //   return false;\n                // }\n\n                console.log(results);\n                let geoData = {};\n\n                geoData.lat = results.data.results[0].geometry.location.lat;\n                geoData.lng = results.data.results[0].geometry.location.lng;\n                // geoData.zip = zipCity;\n                // const address = results.data.results[0].formatted_address;\n                // geoData.address = address.slice(0, address.indexOf(zip)).trim();\n                // geoData.city = address.slice(0, address.indexOf(zip)).trim();//parse the data down to just the city and state\n                return geoData;\n            })\n        }\n\n        // '\"https://maps.googleapis.com/maps/api/geocode/json?address=Dallas&components=administrative_area:Dallas|postal_code:Dallas&key=AIzaSyCY0pUHVH0TCKwnYDFZpl2xkqGkexLRjVg\"'\n\n    })\n","angular.module('snowrider')\n    .service('mapService', function($http, mainService) {\n\n        let map;\n        let service;\n        let infowindow;\n        let currentL;\n        this.initMap = function(geo, results) {\n            //location\n            if (geo) {\n                console.log(geo);\n                currentL = geo;\n                // {lat: Number(geo.lat), lng: Number(geo.lng)\n            } else {\n                currentL = {\n                    lat: Number(mainService.lat),\n                    lng: Number(mainService.long)\n                };\n            }\n\n\n            //creating the new map with the geocode of the currentL\n            map = new google.maps.Map(document.getElementById('map'), {\n                center: currentL,\n                zoom: 12\n            });\n\n            infowindow = new google.maps.InfoWindow();\n            service = new google.maps.places.PlacesService(map);\n\n            // service.textSearch({\n            //   location: currentL,\n            //   radius: 30000,\n            //   query: ['ski, snowboard resorts'],\n            //   rankBy: google.maps.places.RankBy.DISTANCE\n            // }, callback);\n            if (results || mainService.pass()) { // add this condition in order to prevent the call unless an array from the result or directly from the mainService\n                callback(results); // that way we can we the init map function function as a way to center to the curren location\n            }\n\n        }\n\n\n\n        function callback(data) {\n            // if (status === google.maps.places.PlacesServiceStatus.OK) {\n            // console.log(results)\n            // for (var i = 0; i < results.length; i++) {\n            //   createMarker(results[i]); // creating a makrer for each of the result in the map\n            // }\n            var arr;\n            console.log(data);\n            if (data) { //made a condition to not initia map right away\n                arr = data;\n            } else {\n                arr = mainService.pass();\n            }\n            for (var i = 0; i < arr.length; i++) {\n                createMarker(arr[i]); // creating a makrer for each of the result in the map\n            }\n            // }\n        }\n\n        function createMarker(place) {\n            var placeLoc = place.geometry.location;\n            var marker = new google.maps.Marker({\n                map: map,\n                position: place.geometry.location,\n                icon: place.icon\n                // photo: place.photos[0].getUrl({'maxWidth': 35, 'maxHeight': 35})\n            });\n\n            google.maps.event.addListener(marker, 'click', function() {\n                infowindow.setContent(  place.name + '<br>' + place.formatted_address);\n                // infowindow.setContent(place.formatted_address);\n\n                infowindow.open(map, this);\n            });\n        }\n\n    });\n","angular.module('snowrider')\n    .directive('gearDirective', function() {\n\n        return {\n            restrict: 'EA',\n\n            templateUrl: './views/gear/gearDirective.html',\n\n            scope: {\n                // lesson: '=',\n                // datAlert: '&'\n            },\n\n            controller: function($scope) {\n              $scope.gears = gears;\n\n              $(document).ready(function(){\n                $('.carousel').carousel();\n              });\n\n            },\n\n            link: function(scope, elem, attrs) { //elem attribute was different, so it was not applying\n\n              $('a[href*=\"#\"]:not([href=\"#\"])').click(function() {\n                  if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n                      var target = $(this.hash);\n                      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n                      if (target.length) {\n                          $('html, body').animate({\n                              scrollTop: target.offset().top\n                          }, 1000);\n                          return false;\n                      }\n                  }\n              });\n\n\n                // scope.getSchedule.then(function (response) {\n                //   scope.schedule = response.data;\n                //\n                //   for (var i = 0; i < response.data.length; i++) {\n                //\n                //     if (response.data[i].lesson === scope.lesson) {\n                //       scope.lessonDay = response.data[i].weekday\n                //       elem.css(\"text-decoration\", \"line-through\");\n                //       return;\n                //     }\n                //   }\n                // })\n            }\n\n        }\n\n    })\n\n\n\nvar gears = [\n  {\n    img: '../../img/gear/Moment.jpg',\n    desc: 'Our most powerful board built for wide-open freeriding, the full-camber Moment Generator thrives on mandatory cliffs, exposed traverses, and butt-clenchingly steep chutes.',\n    url: 'http://deviationusa.com/product/moment-generator/',\n\n  },\n  {\n    img:'../../img/gear/alpineglow.png',\n    desc: 'Top Sheet Designs',\n    url: 'http://deviationusa.com/product/moment-generator/'\n  },\n\n  {\n    img:'../../img/gear/wood.png',\n    desc: 'Wood Veneer - Marbled Ako',\n    url: 'https://www.wagnerskis.com/gallery/'\n  },\n\n  {\n    img:'../../img/gear/skatingX.png',\n    desc: 'Cross country set: ski, boots and poles',\n    url: 'http://pistetopowder.com/rental/',\n\n  },\n\n  {\n    img:'../../img/gear/ABSp.jpg',\n    desc: 'ABS P.Ride (Mit Schaufel und Sonde)',\n    url: 'http://pistetopowder.com/rental/'\n\n  },\n\n  {\n    img:'../../img/gear/headset.jpg',\n    desc: 'Perfect fitting ski helmet of Cébé in lime and blue',\n    url: 'https://www.vaola.co.uk/p/cebe-fireball-ski-helmet-lime-blue-2378026.html'\n  }\n]\n","angular.module('snowrider')\n  .controller('guidesCtrl', function ($scope, $sce) {\n\n    $scope.val = false;\n\n    $(document).ready(function(){\n      $('.parallax').parallax();\n    });\n        \n  })\n","angular.module('snowrider')\n  .controller('jumboCtrl', function ($scope, $sce) {\n    $scope.vid = $sce.trustAsResourceUrl('../img/jumbo.mp4');\n  })\n  .directive('jumboDirective', function() {\n\n          return {\n              restrict: 'EA',\n\n              templateUrl: './views/jumbo/jumbo.html',\n\n              // scope: {\n              //     // lesson: '=',\n              //     // datAlert: '&'\n              // },\n\n              // controller: function($scope) {\n              //\n              // },\n\n              link: function(scope, elem, attrs) { //elem attribute was different, so it was not applying\n\n\n\n              }\n\n          }\n\n      })\n","angular.module('snowrider')\n    .directive('menuDirective', function() {\n\n        return {\n            restrict: 'EA',\n\n            templateUrl: './views/menu/menu.html',\n\n            scope: {\n                // lesson: '=',\n                // datAlert: '&'\n            },\n\n            controller: function($scope) {\n\n            },\n\n            link: function(scope, elem, attrs) { //elem attribute was different, so it was not applying\n\n              // Initialize collapse button\n            // $(\".button-collapse\").sideNav();\n            // Initialize collapsible (uncomment the line below if you use the dropdown variation)\n            //$('.collapsible').collapsible();\n            // elem.on('click', function () {\n            //   $('.button-collapse').sideNav('show');\n            // })\n\n            $('.button-collapse').sideNav({\n                menuWidth: 300, // Default is 240\n                edge: 'right', // Choose the horizontal origin\n                closeOnClick: true, // Closes side-nav on <a> clicks, useful for Angular/Meteor\n                draggable: true // Choose whether you can drag to open on touch screens\n              }\n            );\n\n            // Show sideNav\n  // $('.button-collapse').sideNav('show');\n  // // Hide sideNav\n  // $('.button-collapse').sideNav('hide');\n  // // Destroy sideNav\n  // $('.button-collapse').sideNav('destroy')\n\n\n            }\n\n        }\n\n    })\n","angular.module('snowrider')\n    .controller('searchCtrl', function($scope, mainService, mapService) {\n\n        let geoData;\n        var data;\n        $scope.photos = [];\n\n        $scope.getResorts = function(zipOcity) { // whne ng-clicked to initiate\n            mainService.getResorts().then(function(results) {\n                    $scope.resorts = results; // so i can scope it\n\n                    console.log(results);\n\n                    return results\n\n                })\n                // .then(function(res) {\n                //   for (var i = 0; i < res.length; i++) { // loop  though the result and try to get the photo for each place hile keeping it on scope\n                //     mainService.getPhotos(res[i].photos[0].photo_reference).then(function (response) {\n                //       $scope.photos.push(response)\n                //       console.log($scope.photos);\n                //     })\n                //\n                //   }\n                // })\n\n\n                //  return data;\n        }\n\n        $scope.showMap = function() {\n            mapService.initMap();\n        }\n\n        $scope.showMap(); //initialize an empty map on load\n\n\n\n        $scope.geoCode = function(zipCity) {\n\n            mainService.geoCode(zipCity).then(function(response) {\n                    console.log(response);\n                    geoData = response;\n                    return geoData\n                })\n                .then(function(geo) {\n                    console.log(geo);\n                    // var data = $scope.getResorts(geo);\n                    // console.log($scope.getResorts(geo));\n\n                    // return  $scope.getResorts(geo)\n                    return mainService.getResorts(geo).then(function(results) {\n                        $scope.resorts = results; // so i can scope it\n                        return results;\n                    })\n                })\n                .then(function(results) {\n                    console.log(results);\n                    console.log(geoData);\n                    mapService.initMap(geoData, results);\n                })\n        }\n\n\n    })\n"]}