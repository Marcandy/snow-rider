{"version":3,"sources":["app.js","mainService.js","mapService.js","gear/gearDirective.js","guides/guidesCtrl.js","jumbo/jumboCtrl.js","menu/menuDirective.js","search/searchCtrl.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","views","service","$http","key","resorts","city","geoplugin_city","geoplugin_region","lat","geoplugin_latitude","long","geoplugin_longitude","searchKeyword","searchText","location","radius","getResorts","geo","lng","console","log","method","then","response","data","results","getPhotos","reference","pass","geoUrl","components1","components2","geoCode","zipCity","geoData","geometry","mainService","map","infowindow","currentL","initMap","Number","google","maps","Map","document","getElementById","center","zoom","InfoWindow","places","PlacesService","callback","arr","i","length","createMarker","place","placeLoc","marker","Marker","position","event","addListener","setContent","name","formatted_address","open","directive","restrict","scope","$scope","link","elem","attrs","$","click","pathname","replace","hostname","target","hash","slice","animate","scrollTop","offset","top","$sce","val","vid","trustAsResourceUrl","on","sideNav","menuWidth","edge","closeOnClick","draggable","mapService","photos","zipOcity","res","photo_reference","push","showMap"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('snowrider', ['ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: \"./views/jumbo/jumbo.html\",\n                controller: 'jumboCtrl'\n            })\n            .state('guide', {\n                url: '/guide',\n\n                // templateUrl: \"./views/guides/guides.html\",\n                // controller: 'guidesCtrl',\n\n                views: {\n                    '': {\n                        templateUrl: \"./views/guides/guides.html\",\n                        controller: 'guidesCtrl',\n                    },\n\n                    \"featured@guide\": {\n                        templateUrl: './views/guides/resort.html'\n                    }\n                }\n\n            })\n            .state('gear', {\n                url: '/gear',\n                templateUrl: './views/gear/gear.html'\n            })\n            .state('search', {\n              url: '/search',\n              templateUrl: './views/search/search.html',\n              controller: 'searchCtrl'\n            })\n    })\n","angular.module('snowrider')\n    .service('mainService', function($http) {\n\n        // google places Map api key\n        const key = '&key=AIzaSyCY0pUHVH0TCKwnYDFZpl2xkqGkexLRjVg';\n\n        var resorts;\n\n        // with geoplugin api\n        this.city = geoplugin_city();\n        this.state = geoplugin_region();\n        this.lat = geoplugin_latitude();\n        this.long = geoplugin_longitude();\n\n        // search request\n        let searchKeyword = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=';\n        // -33.8670522,151.1957362&type=restaurant&keyword=&key=YOUR_API_KEY\n\n        let searchText = 'https://maps.googleapis.com/maps/api/place/textsearch/json?query=ski+snowboard+resorts&rankBy=distance'\n        var location = '&location=' + this.lat + ',' + this.long;\n        let radius = '&radius=20000';\n\n        this.getResorts = function(geo) { // when to convert the user iputed city name or zipcode\n            if (geo) {\n                location = '&location=' + geo.lat + ',' + geo.lng; //had to reset the location parameter correctly\n                console.log(location);\n            }\n            return $http({\n\n\n                method: 'GET',\n                url: searchText + location + key,\n                //  'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=-33.8670522,151.1957362&radius=500&type=restaurant&keyword=cruise' + key\n\n\n                // headers: {\n                //   'Access-Control-Allow-Origin: * ',\n                //   'Access-Control-Allow-Headers: AUTHORIZATION',\n                //   'Access-Control-Allow-Methods: GET'\n                // }\n            }).then(function(response) {\n                console.log(response);\n                resorts = response.data.results;\n                console.log(resorts);\n                // for (var i = 0; i < resorts.length; i++) {\n                //   this.getPhotos(resorts[i].photos[0].photo_reference)\n                //\n                // }\n                // response.addHeader(\"Access-Control-Allow-Origin\", \"*\");\n                return response.data.results;\n            })\n        }\n\n        this.getPhotos = function (reference) {\n          return $http({\n            method: 'GET',\n            url:\n            //  'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=CnRtAAAATLZNl354RwP_9UKbQ_5Psy40texXePv4oAlgP4qNEkdIrkyse7rPXYGd9D_Uj1rVsQdWT4oRz4QrYAJNpFX7rzqqMlZw2h2E2y5IKMUZ7ouD_SlcHxYq1yL4KbKUv3qtWgTK0A6QbGh87GB3sscrHRIQiG2RrmU_jF4tENr9wGS_YxoUSSDrYjWmrNfeEHSGSc3FyhNLlBU' + key\n            'https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&photoreference=' + reference + key\n          }).then(function (response) {\n            console.log(response);\n            return response.data;\n          })\n        }\n\n\n        this.pass = function() {\n            return resorts;\n        }\n\n        const geoUrl = 'https://maps.googleapis.com/maps/api/geocode/json?address=';\n        const components1 = '&components=administrative_area_level_3:';\n        const components2 = '|postal_code:';\n\n        this.geoCode = function(zipCity) {\n            //console.log(zipcodeBaseUrl + zip + zipcodeComponents + zip + '&sensor=true' + zipcodeKey);\n            return $http({\n                method: 'GET',\n                url: geoUrl + zipCity + key\n            }).then(function(results) {\n\n                // if(results.data.status === \"ZERO_RESULTS\") {\n                //   return false;\n                // }\n\n                console.log(results);\n                let geoData = {};\n\n                geoData.lat = results.data.results[0].geometry.location.lat;\n                geoData.lng = results.data.results[0].geometry.location.lng;\n                // geoData.zip = zipCity;\n                // const address = results.data.results[0].formatted_address;\n                // geoData.address = address.slice(0, address.indexOf(zip)).trim();\n                // geoData.city = address.slice(0, address.indexOf(zip)).trim();//parse the data down to just the city and state\n                return geoData;\n            })\n        }\n\n        // '\"https://maps.googleapis.com/maps/api/geocode/json?address=Dallas&components=administrative_area:Dallas|postal_code:Dallas&key=AIzaSyCY0pUHVH0TCKwnYDFZpl2xkqGkexLRjVg\"'\n\n    })\n","angular.module('snowrider')\n    .service('mapService', function($http, mainService) {\n\n        let map;\n        let service;\n        let infowindow;\n        let currentL;\n        this.initMap = function(geo, results) {\n            //location\n            if (geo) {\n                console.log(geo);\n                currentL = geo;\n                // {lat: Number(geo.lat), lng: Number(geo.lng)\n            } else {\n                currentL = {\n                    lat: Number(mainService.lat),\n                    lng: Number(mainService.long)\n                };\n            }\n\n\n            //creating the new map with the geocode of the currentL\n            map = new google.maps.Map(document.getElementById('map'), {\n                center: currentL,\n                zoom: 12\n            });\n\n            infowindow = new google.maps.InfoWindow();\n            service = new google.maps.places.PlacesService(map);\n\n            // service.textSearch({\n            //   location: currentL,\n            //   radius: 30000,\n            //   query: ['ski, snowboard resorts'],\n            //   rankBy: google.maps.places.RankBy.DISTANCE\n            // }, callback);\n            if (results || mainService.pass()) { // add this condition in order to prevent the call unless an array from the result or directly from the mainService\n                callback(results); // that way we can we the init map function function as a way to center to the curren location\n            }\n\n        }\n\n\n\n        function callback(data) {\n            // if (status === google.maps.places.PlacesServiceStatus.OK) {\n            // console.log(results)\n            // for (var i = 0; i < results.length; i++) {\n            //   createMarker(results[i]); // creating a makrer for each of the result in the map\n            // }\n            var arr;\n            console.log(data);\n            if (data) { //made a condition to not initia map right away\n                arr = data;\n            } else {\n                arr = mainService.pass();\n            }\n            for (var i = 0; i < arr.length; i++) {\n                createMarker(arr[i]); // creating a makrer for each of the result in the map\n            }\n            // }\n        }\n\n        function createMarker(place) {\n            var placeLoc = place.geometry.location;\n            var marker = new google.maps.Marker({\n                map: map,\n                position: place.geometry.location,\n                // photo: place.photos[0].getUrl({'maxWidth': 35, 'maxHeight': 35})\n            });\n\n            google.maps.event.addListener(marker, 'click', function() {\n                infowindow.setContent(  place.name + '<br>' + place.formatted_address);\n                // infowindow.setContent(place.formatted_address);\n\n                infowindow.open(map, this);\n            });\n        }\n\n    });\n","angular.module('snowrider')\n    .directive('gearDirective', function() {\n\n        return {\n            restrict: 'EA',\n\n            templateUrl: './views/gear/gearDirective.html',\n\n            scope: {\n                // lesson: '=',\n                // datAlert: '&'\n            },\n\n            controller: function($scope) {\n\n            },\n\n            link: function(scope, elem, attrs) { //elem attribute was different, so it was not applying\n\n              $('a[href*=\"#\"]:not([href=\"#\"])').click(function() {\n                  if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n                      var target = $(this.hash);\n                      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n                      if (target.length) {\n                          $('html, body').animate({\n                              scrollTop: target.offset().top\n                          }, 1000);\n                          return false;\n                      }\n                  }\n              });\n\n\n                // scope.getSchedule.then(function (response) {\n                //   scope.schedule = response.data;\n                //\n                //   for (var i = 0; i < response.data.length; i++) {\n                //\n                //     if (response.data[i].lesson === scope.lesson) {\n                //       scope.lessonDay = response.data[i].weekday\n                //       elem.css(\"text-decoration\", \"line-through\");\n                //       return;\n                //     }\n                //   }\n                // })\n            }\n\n        }\n\n    })\n\n\n    \n","angular.module('snowrider')\n  .controller('guidesCtrl', function ($scope, $sce) {\n\n    $scope.val = false;\n  })\n","angular.module('snowrider')\n  .controller('jumboCtrl', function ($scope, $sce) {\n    $scope.vid = $sce.trustAsResourceUrl('../img/jumbo.mp4');\n  })\n  .directive('jumboDirective', function() {\n\n          return {\n              restrict: 'EA',\n\n              templateUrl: './views/jumbo/jumbo.html',\n\n              // scope: {\n              //     // lesson: '=',\n              //     // datAlert: '&'\n              // },\n\n              // controller: function($scope) {\n              //\n              // },\n\n              link: function(scope, elem, attrs) { //elem attribute was different, so it was not applying\n\n\n\n              }\n\n          }\n\n      })\n","angular.module('snowrider')\n    .directive('menuDirective', function() {\n\n        return {\n            restrict: 'EA',\n\n            templateUrl: './views/menu/menu.html',\n\n            scope: {\n                // lesson: '=',\n                // datAlert: '&'\n            },\n\n            controller: function($scope) {\n\n            },\n\n            link: function(scope, elem, attrs) { //elem attribute was different, so it was not applying\n\n              // Initialize collapse button\n            // $(\".button-collapse\").sideNav();\n            // Initialize collapsible (uncomment the line below if you use the dropdown variation)\n            //$('.collapsible').collapsible();\n            elem.on('click', function () {\n              $('.button-collapse').sideNav('show');\n            })\n            $('.button-collapse').sideNav({\n                menuWidth: 300, // Default is 240\n                edge: 'right', // Choose the horizontal origin\n                closeOnClick: true, // Closes side-nav on <a> clicks, useful for Angular/Meteor\n                draggable: true // Choose whether you can drag to open on touch screens\n              }\n            );\n\n            // Show sideNav\n  // $('.button-collapse').sideNav('show');\n  // // Hide sideNav\n  // $('.button-collapse').sideNav('hide');\n  // // Destroy sideNav\n  // $('.button-collapse').sideNav('destroy')\n\n\n            }\n\n        }\n\n    })\n","angular.module('snowrider')\n    .controller('searchCtrl', function($scope, mainService, mapService) {\n\n        let geoData;\n        var data;\n$scope.photos = [];\n\n        $scope.getResorts = function(zipOcity) { // whne ng-clicked to initiate\n            mainService.getResorts().then(function(results) {\n                    $scope.resorts = results; // so i can scope it\n\n\n\n                    return results\n\n                }).then(function(res) {\n                  for (var i = 0; i < res.length; i++) { // loop  though the result and try to get the photo for each place hile keeping it on scope\n                    mainService.getPhotos(res[i].photos[0].photo_reference).then(function (response) {\n                      $scope.photos.push(response)\n                      console.log($scope.photos);\n                    })\n\n                  }\n                })\n\n\n                //  return data;\n        }\n\n        $scope.showMap = function() {\n            mapService.initMap();\n        }\n\n        $scope.showMap(); //initialize an empty map on load\n\n\n\n        $scope.geoCode = function(zipCity) {\n\n            mainService.geoCode(zipCity).then(function(response) {\n                    console.log(response);\n                    geoData = response;\n                    return geoData\n                })\n                .then(function(geo) {\n                    console.log(geo);\n                    // var data = $scope.getResorts(geo);\n                    // console.log($scope.getResorts(geo));\n\n                    // return  $scope.getResorts(geo)\n                    return mainService.getResorts(geo).then(function(results) {\n                        $scope.resorts = results; // so i can scope it\n                        return results;\n                    })\n                })\n                .then(function(results) {\n                    console.log(results);\n                    console.log(geoData);\n                    mapService.initMap(geoData, results);\n                })\n        }\n\n\n    })\n"]}