{"version":3,"sources":["app.js","mainService.js","gear/gearDirective.js","guides/guidesCtrl.js","jumbo/jumboCtrl.js","search/searchCtrl.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","views","service","$http","key","city","geoplugin_city","geoplugin_region","lat","geoplugin_latitude","long","geoplugin_longitude","searchKeyword","searchText","location","radius","getResorts","geo","method","then","response","console","log","data","results","directive","restrict","scope","$scope","link","elem","attrs","$","click","pathname","replace","hostname","target","hash","length","slice","animate","scrollTop","offset","top","$sce","val","vid","trustAsResourceUrl","mainService","zipOcity","resorts"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('snowrider', ['ui.router'])\n    .config(function($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: \"./views/jumbo/jumbo.html\",\n                controller: 'jumboCtrl'\n            })\n            .state('guide', {\n                url: '/guide',\n\n                // templateUrl: \"./views/guides/guides.html\",\n                // controller: 'guidesCtrl',\n\n                views: {\n                    '': {\n                        templateUrl: \"./views/guides/guides.html\",\n                        controller: 'guidesCtrl',\n                    },\n\n                    \"featured@guide\": {\n                        templateUrl: './views/guides/resort.html'\n                    }\n                }\n\n            })\n            .state('gear', {\n                url: '/gear',\n                templateUrl: './views/gear/gear.html'\n            })\n            .state('search', {\n              url: '/search',\n              templateUrl: './views/search/search.html',\n              controller: 'searchCtrl'\n            })\n    })\n","angular.module('snowrider')\n  .service('mainService', function ($http) {\n\n    // google places Map api key\n    const key = '&key=AIzaSyCY0pUHVH0TCKwnYDFZpl2xkqGkexLRjVg';\n\n\n    // with geoplugin api\n      this.city = geoplugin_city();\n      this.state = geoplugin_region();\n      this.lat = geoplugin_latitude();\n      this.long = geoplugin_longitude();\n\n    // search request\n      let searchKeyword = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=';\n      // -33.8670522,151.1957362&type=restaurant&keyword=&key=YOUR_API_KEY\n\n      let searchText = 'https://maps.googleapis.com/maps/api/place/textsearch/json?query=ski+snowboarding'\n      let location = '&location=' + this.lat + ',' + this.long;\n      let radius = '&radius=30000';\n\n      this.getResorts = function(geo) { // when to convert the user iputed city name or zipcode\n        return $http({\n          method: 'GET',\n          url: searchText + location + radius + key,\n          //  'https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=-33.8670522,151.1957362&radius=500&type=restaurant&keyword=cruise' + key\n\n\n          // headers: {\n          //   'Access-Control-Allow-Origin: * ',\n          //   'Access-Control-Allow-Headers: AUTHORIZATION',\n          //   'Access-Control-Allow-Methods: GET'\n          // }\n        }).then(function (response) {\n          console.log(response);\n          // response.addHeader(\"Access-Control-Allow-Origin\", \"*\");\n          return response.data.results;\n        })\n      }\n\n  })\n","angular.module('snowrider')\n    .directive('gearDirective', function() {\n\n        return {\n            restrict: 'EA',\n\n            templateUrl: './views/gear/gearDirective.html',\n\n            scope: {\n                // lesson: '=',\n                // datAlert: '&'\n            },\n\n            controller: function($scope) {\n\n            },\n\n            link: function(scope, elem, attrs) { //elem attribute was different, so it was not applying\n\n              $('a[href*=\"#\"]:not([href=\"#\"])').click(function() {\n                  if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n                      var target = $(this.hash);\n                      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n                      if (target.length) {\n                          $('html, body').animate({\n                              scrollTop: target.offset().top\n                          }, 1000);\n                          return false;\n                      }\n                  }\n              });\n\n\n                // scope.getSchedule.then(function (response) {\n                //   scope.schedule = response.data;\n                //\n                //   for (var i = 0; i < response.data.length; i++) {\n                //\n                //     if (response.data[i].lesson === scope.lesson) {\n                //       scope.lessonDay = response.data[i].weekday\n                //       elem.css(\"text-decoration\", \"line-through\");\n                //       return;\n                //     }\n                //   }\n                // })\n            }\n\n        }\n\n    })\n","angular.module('snowrider')\n  .controller('guidesCtrl', function ($scope, $sce) {\n\n    $scope.val = false;\n  })\n","angular.module('snowrider')\n  .controller('jumboCtrl', function ($scope, $sce) {\n    $scope.vid = $sce.trustAsResourceUrl('../img/jumbo.mp4');\n  })\n","angular.module('snowrider')\n  .controller('searchCtrl', function ($scope, mainService) {\n\n    $scope.getResorts = function (zipOcity) {// whne ng-clicked to initiate\n      mainService.getResorts().then(function (results) {\n       $scope.resorts = results;\n     })\n    }\n\n\n  })\n"]}